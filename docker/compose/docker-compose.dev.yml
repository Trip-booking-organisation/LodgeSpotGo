x-logging: &fluent-bit
  driver: fluentd
  options:
    fluentd-address: fluent-bit:24224
version: '3.8'
name: lodge-spot-dev
services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "6831:6831/udp"
    networks:
      - lodge-spot-go
      - monitoring
  keycloak-db:
    image: postgres
    restart: always
    ports:
      - "15431:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin1312
      POSTGRES_DB: keycloak
      POSTGRES_SCHEMA: keycloak
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - lodge-spot-go
      - monitoring
    
  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin1312
      KC_FEATURES: declarative-user-profile
    entrypoint: [ "/opt/keycloak/bin/kc.sh", "start-dev" ]
    ports:
      - "8080:8080"
    logging:
      driver: fluentd
      options:
        fluentd-address: 172.29.0.5:24224
        fluentd-async: 'true'
    networks:
      - lodge-spot-go
      - monitoring
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "28018:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://lodge1312:lodge420@accommodation-db:27017/
  accommodation-db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: lodge1312
      MONGO_INITDB_ROOT_PASSWORD: lodge420
      MONGO_INITDB_DATABASE: accommodation-db
    ports:
      - "27101:27017"
    volumes:
      - accommodation-db-data:/data/db
      - ../entrypoint-initdb.d:/docker-entrypoint-initdb.d
    logging:
        driver: fluentd
        options:
          fluentd-address: 172.29.0.5:24224
          fluentd-async: 'true'
    networks:
      - lodge-spot-go
      - monitoring
  reservation-db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: lodge1312
      MONGO_INITDB_ROOT_PASSWORD: lodge420
      MONGO_INITDB_DATABASE: reservation-db
    ports:
      - "27018:27017"
    volumes:
      - reservation-db-data:/data/db
      - ../entrypoint-initdb.d:/docker-entrypoint-initdb.d
    logging:
      driver: fluentd
      options:
        fluentd-address: 172.29.0.5:24224
        fluentd-async: 'true'
    networks:
      - lodge-spot-go
      - monitoring
  user-db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: lodge1312
      MONGO_INITDB_ROOT_PASSWORD: lodge420
      MONGO_INITDB_DATABASE: user-db
    ports:
      - "27019:27017"
    volumes:
      - user-db-data:/data/db
      - ../entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - lodge-spot-go
      - monitoring
    logging:
      driver: fluentd
      options:
        fluentd-address: 172.29.0.5:24224
        fluentd-async: 'true'
  notification-db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: lodge1312
      MONGO_INITDB_ROOT_PASSWORD: lodge420
      MONGO_INITDB_DATABASE: notification-db
    ports:
      - "27020:27017"
    volumes:
      - notification-db-data:/data/db
      - ../entrypoint-initdb.d:/docker-entrypoint-initdb.d
    logging:
      driver: fluentd
      options:
        fluentd-address: 172.29.0.5:24224
        fluentd-async: 'true'
    networks:
      - lodge-spot-go
      - monitoring
  search-db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: lodge1312
      MONGO_INITDB_ROOT_PASSWORD: lodge420
      MONGO_INITDB_DATABASE: search-db
    ports:
      - "27100:27017"
    volumes:
      - search-db-data:/data/db
      - ../entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - lodge-spot-go
      - monitoring
  lodge-spot-mq:
    image: rabbitmq:3.11.7-management
    container_name: lodge-spot-mq
    hostname: lodge-spot-mq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: user
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - mq-lodge-data:/var/lib/rabbitmq
      - mq-lodge-log:/var/log/rabbitmq
volumes:
  accommodation-db-data:
    driver: local
  reservation-db-data:
    driver: local
  user-db-data:
    driver: local
  search-db-data:
    driver: local
  keycloak-db-data:
    driver: local
  mq-lodge-data:
    driver: local
  mq-lodge-log:
    driver: local
  notification-db-data:
    driver: local
networks:
  lodge-spot-go:
    name: lodge-spot-go
  monitoring:
  